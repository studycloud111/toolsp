upstream fschk {
    # 使用hash负载均衡策略
    hash $remote_addr consistent;
    server 172.105.228.81:15002 max_fails=3 fail_timeout=30s; 
}
upstream fscjp {
    # 使用hash负载均衡策略
    hash $remote_addr consistent;
    server 172.104.90.238:15002 max_fails=3 fail_timeout=30s; 
}
upstream fscsg {
    # 使用hash负载均衡策略
    hash $remote_addr consistent;
    server 143.42.66.51:15002 max_fails=3 fail_timeout=30s; 
}
upstream fscuk {
    # 使用hash负载均衡策略
    hash $remote_addr consistent;
    server 143.47.249.213:15002 max_fails=3 fail_timeout=30s; 
}
upstream fscus {
    # 使用hash负载均衡策略
    hash $remote_addr consistent;
    server 45.79.110.187:15002 max_fails=3 fail_timeout=30s; 
}
upstream fscca {
    # 使用hash负载均衡策略
    hash $remote_addr consistent;
    server 132.145.109.63:15002 max_fails=3 fail_timeout=30s; 
}
upstream fsckr {
    # 使用hash负载均衡策略
    hash $remote_addr consistent;
    server 150.230.254.120:15002 max_fails=3 fail_timeout=30s; 
}
upstream fscde {
    # 使用hash负载均衡策略
    hash $remote_addr consistent;
    server 138.2.133.156:15002 max_fails=3 fail_timeout=30s; 
}
upstream fsctw {
    # 使用hash负载均衡策略
    hash $remote_addr consistent;
    server hinet1.camdvr.org:15002 max_fails=3 fail_timeout=30s; 
}
# TCP配置
server {
    listen   20001;                   
    proxy_connect_timeout 5s;  # 与被代理服务器建立连接的超时时间为5s
    proxy_timeout 20s;   # 获取被代理服务器的响应最大超时时间为20s
    proxy_next_upstream on;  # 当被代理的服务器返回错误或超时时，将未返回响应的客户端连接请求传递给upstream中的下一个服务器
    proxy_next_upstream_tries 3;   # 转发尝试请求最多3次
    proxy_next_upstream_timeout 10s;    # 总尝试超时时间为10s
    proxy_socket_keepalive on;  # 开启SO_KEEPALIVE选项进行心跳检测
    proxy_pass        fschk;
}
# UDP配置
server {
    listen 20001 udp;
    proxy_pass fschk;
    proxy_timeout 1s;
    proxy_responses 1;
}
# TCP配置
server {
    listen   20003;                   
    proxy_connect_timeout 5s;  # 与被代理服务器建立连接的超时时间为5s
    proxy_timeout 20s;   # 获取被代理服务器的响应最大超时时间为20s
    proxy_next_upstream on;  # 当被代理的服务器返回错误或超时时，将未返回响应的客户端连接请求传递给upstream中的下一个服务器
    proxy_next_upstream_tries 3;   # 转发尝试请求最多3次
    proxy_next_upstream_timeout 10s;    # 总尝试超时时间为10s
    proxy_socket_keepalive on;  # 开启SO_KEEPALIVE选项进行心跳检测
    proxy_pass        fscjp;
}
# UDP配置
server {
    listen 20003 udp;
    proxy_pass fscjp;
    proxy_timeout 1s;
    proxy_responses 1;
}
server {
    listen   20004;                   
    proxy_connect_timeout 5s;  # 与被代理服务器建立连接的超时时间为5s
    proxy_timeout 20s;   # 获取被代理服务器的响应最大超时时间为20s
    proxy_next_upstream on;  # 当被代理的服务器返回错误或超时时，将未返回响应的客户端连接请求传递给upstream中的下一个服务器
    proxy_next_upstream_tries 3;   # 转发尝试请求最多3次
    proxy_next_upstream_timeout 10s;    # 总尝试超时时间为10s
    proxy_socket_keepalive on;  # 开启SO_KEEPALIVE选项进行心跳检测
    proxy_pass        fscsg;
}
# UDP配置
server {
    listen 20004 udp;
    proxy_pass fscsg;
    proxy_timeout 1s;
    proxy_responses 1;
}
server {
    listen   20005;                   
    proxy_connect_timeout 5s;  # 与被代理服务器建立连接的超时时间为5s
    proxy_timeout 20s;   # 获取被代理服务器的响应最大超时时间为20s
    proxy_next_upstream on;  # 当被代理的服务器返回错误或超时时，将未返回响应的客户端连接请求传递给upstream中的下一个服务器
    proxy_next_upstream_tries 3;   # 转发尝试请求最多3次
    proxy_next_upstream_timeout 10s;    # 总尝试超时时间为10s
    proxy_socket_keepalive on;  # 开启SO_KEEPALIVE选项进行心跳检测
    proxy_pass        fscuk;
}
# UDP配置
server {
    listen 20005 udp;
    proxy_pass fscuk;
    proxy_timeout 1s;
    proxy_responses 1;
}
server {
    listen   20006;                   
    proxy_connect_timeout 5s;  # 与被代理服务器建立连接的超时时间为5s
    proxy_timeout 20s;   # 获取被代理服务器的响应最大超时时间为20s
    proxy_next_upstream on;  # 当被代理的服务器返回错误或超时时，将未返回响应的客户端连接请求传递给upstream中的下一个服务器
    proxy_next_upstream_tries 3;   # 转发尝试请求最多3次
    proxy_next_upstream_timeout 10s;    # 总尝试超时时间为10s
    proxy_socket_keepalive on;  # 开启SO_KEEPALIVE选项进行心跳检测
    proxy_pass        fscus;
}
# UDP配置
server {
    listen 20006 udp;
    proxy_pass fscus;
    proxy_timeout 1s;
    proxy_responses 1;
}
server {
    listen   20007;                   
    proxy_connect_timeout 5s;  # 与被代理服务器建立连接的超时时间为5s
    proxy_timeout 20s;   # 获取被代理服务器的响应最大超时时间为20s
    proxy_next_upstream on;  # 当被代理的服务器返回错误或超时时，将未返回响应的客户端连接请求传递给upstream中的下一个服务器
    proxy_next_upstream_tries 3;   # 转发尝试请求最多3次
    proxy_next_upstream_timeout 10s;    # 总尝试超时时间为10s
    proxy_socket_keepalive on;  # 开启SO_KEEPALIVE选项进行心跳检测
    proxy_pass        fscca;
}
# UDP配置
server {
    listen 20007 udp;
    proxy_pass fscca;
    proxy_timeout 1s;
    proxy_responses 1;
}
server {
    listen   20008;                   
    proxy_connect_timeout 5s;  # 与被代理服务器建立连接的超时时间为5s
    proxy_timeout 20s;   # 获取被代理服务器的响应最大超时时间为20s
    proxy_next_upstream on;  # 当被代理的服务器返回错误或超时时，将未返回响应的客户端连接请求传递给upstream中的下一个服务器
    proxy_next_upstream_tries 3;   # 转发尝试请求最多3次
    proxy_next_upstream_timeout 10s;    # 总尝试超时时间为10s
    proxy_socket_keepalive on;  # 开启SO_KEEPALIVE选项进行心跳检测
    proxy_pass        fsckr;
}
# UDP配置
server {
    listen 20008 udp;
    proxy_pass fsckr;
    proxy_timeout 1s;
    proxy_responses 1;
}
server {
    listen   20009;                   
    proxy_connect_timeout 5s;  # 与被代理服务器建立连接的超时时间为5s
    proxy_timeout 20s;   # 获取被代理服务器的响应最大超时时间为20s
    proxy_next_upstream on;  # 当被代理的服务器返回错误或超时时，将未返回响应的客户端连接请求传递给upstream中的下一个服务器
    proxy_next_upstream_tries 3;   # 转发尝试请求最多3次
    proxy_next_upstream_timeout 10s;    # 总尝试超时时间为10s
    proxy_socket_keepalive on;  # 开启SO_KEEPALIVE选项进行心跳检测
    proxy_pass        fscde;
}
# UDP配置
server {
    listen 20009 udp;
    proxy_pass fscde;
    proxy_timeout 1s;
    proxy_responses 1;
}
server {
    listen   20002;                   
    proxy_connect_timeout 5s;  # 与被代理服务器建立连接的超时时间为5s
    proxy_timeout 20s;   # 获取被代理服务器的响应最大超时时间为20s
    proxy_next_upstream on;  # 当被代理的服务器返回错误或超时时，将未返回响应的客户端连接请求传递给upstream中的下一个服务器
    proxy_next_upstream_tries 3;   # 转发尝试请求最多3次
    proxy_next_upstream_timeout 10s;    # 总尝试超时时间为10s
    proxy_socket_keepalive on;  # 开启SO_KEEPALIVE选项进行心跳检测
    proxy_pass        fsctw;
}
# UDP配置
server {
    listen 20002 udp;
    proxy_pass fsctw;
    proxy_timeout 1s;
    proxy_responses 1;
}
